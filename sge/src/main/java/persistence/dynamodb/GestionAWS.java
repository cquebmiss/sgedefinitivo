package persistence.dynamodb;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBConvertedBool;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIgnore;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverter;

import gui.persistence.wunderlist.WunderlistWSBean;
import lombok.Getter;
import lombok.Setter;
import modelo.gestion.Task;
import modelo.gestion.WUsuario;
import util.FacesUtils;
import util.gestion.UtilidadesGestion;

@DynamoDBTable(tableName = "gestion_Gestion")
@Getter
@Setter
public class GestionAWS
{

	private String				UUID_Gestion;
	private int					idGestion;

	@DynamoDBAttribute
	private String				folio;
	@DynamoDBAttribute
	private String				descripcion;

    @DynamoDBTypeConverted(converter = LocalDateConverter.class)
	@DynamoDBAttribute
	private LocalDate			fechaRecepcion;
	@DynamoDBAttribute
	private String				solicitadoA;
	@DynamoDBAttribute
	private String				solicitud;
	@DynamoDBAttribute
	private String				detallesGenerales;
	
	@DynamoDBAttribute
	@DynamoDBTypeConverted(converter = LocalDateConverter.class)
	private LocalDate			fechaFinalizacion;
	@DynamoDBAttribute
	private String				resumenFinal;
	
	@DynamoDBAttribute
	private StatusActividadAWS	status;
	
	@DynamoDBAttribute
	private Costo				costo;
	
	@DynamoDBAttribute
	private List<Contacto>		contactos;
	
	@DynamoDBAttribute
	private PacienteAWS			paciente;
	
	@DynamoDBAttribute
	private TipoGestionAWS		tipoGestion;
	
	@DynamoDBAttribute
	private String				idTareaWunderlist;
	@DynamoDBAttribute
	private String				idListaWunderlist;

	@DynamoDBAttribute
	@DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
	private LocalDateTime		fechaCreacion;

	@DynamoDBAttribute
	private CategoriaGestionAWS	categoria;

	// Tarea en Wunderlist
	@DynamoDBIgnore
	private Task				tareaW;

	public GestionAWS()
	{
		super();
		this.idGestion = -1;
		this.folio = "";
		this.descripcion = "";
		this.fechaRecepcion = LocalDate.now();
		this.solicitadoA = "";
		this.solicitud = "";
		this.detallesGenerales = "";
		this.resumenFinal = "";
		this.paciente = new PacienteAWS();
		this.contactos = new ArrayList<>();

		// Se inicializa el objeto con el status en -1 que significa que la actividad
		// está agendada, pasará a 0 iniciada al momento de que sea revisada por el
		// departamento de gestión y enlace
		this.status = new StatusActividadAWS(-1, "Agendada");
		// El tipo de gestión siempre será Atención y Servicios para éste módulo
		this.tipoGestion = new TipoGestionAWS(1, "Atención y Mejoras");

		this.costo = new Costo();
	}

	static public class LocalDateConverter implements DynamoDBTypeConverter<String, LocalDate>
	{

		@Override
		public String convert(final LocalDate time)
		{

			return time.toString();
		}

		@Override
		public LocalDate unconvert(final String stringValue)
		{

			return LocalDate.parse(stringValue);
		}
	}
	
	static public class LocalDateTimeConverter implements DynamoDBTypeConverter<String, LocalDateTime>
	{

		@Override
		public String convert(final LocalDateTime time)
		{

			return time.toString();
		}

		@Override
		public LocalDateTime unconvert(final String stringValue)
		{

			return LocalDateTime.parse(stringValue);
		}
	}

	public void updateTaskWunderlist()
	{
		WunderlistWSBean wBean = (WunderlistWSBean) FacesUtils.getManagedBean(UtilidadesGestion.wunderlistWSBean);
		WUsuario wUsuario = wBean.getwUsuario();
		wUsuario.getTareaWunderlist(this.getIdTareaWunderlist());
		setTareaW(wUsuario.getTarea());
	}

	public void updateTaskCommentsWunderlist()
	{
		if (this.tareaW == null)
		{
			updateTaskWunderlist();
		}

		WunderlistWSBean wBean = (WunderlistWSBean) FacesUtils.getManagedBean(UtilidadesGestion.wunderlistWSBean);
		WUsuario wUsuario = wBean.getwUsuario();

		wUsuario.getComentariosEnTarea(this.tareaW);

		Collections.reverse(this.tareaW.getComentarios());

	}

	@DynamoDBHashKey(attributeName = "UUID_Gestion")
	@DynamoDBAutoGeneratedKey
	public String getUUID_Gestion()
	{
		return UUID_Gestion;
	}

	public void setUUID_Gestion(String uUID_Gestion)
	{
		UUID_Gestion = uUID_Gestion;
	}

	@DynamoDBRangeKey(attributeName = "idGestion")
	public int getIdGestion()
	{
		return idGestion;
	}

	public void setIdGestion(int idGestion)
	{
		this.idGestion = idGestion;
	}

}
